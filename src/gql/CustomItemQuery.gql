query itemQuery(
  $archetype: ArchetypeInputType!
) {
  archetype(archetype: $archetype) {
    asset {
      assetContract {
        account {
          address
        }
      }
      assetOwners(first: 1) {
        edges {
          node {
            owner {
              ...AccountLink_data
            }
          }
        }
      }
      isListable
      name
      tokenId
      assetEventData {
        lastSale {
          unitPriceQuantity {
            ...AssetQuantity_data
          }
        }
      }
      ...trait_data
    }
  }
  tradeSummary(archetype: $archetype) {
    ...AskBidModal_trade
  }
}

fragment AccountLink_data on AccountType {
  address
  user {
    username
  }
}

fragment AskBidModal_archetype_3z4lq0 on ArchetypeType {
  asset {
    assetContract {
      account {
        address
        chain {
          identifier
          id
        }
        id
      }
      id
    }
    decimals
    relayId
    ownedQuantity(identity: {})
    collection {
      slug
      paymentAssets {
        relayId
        asset {
          assetContract {
            account {
              address
              id
            }
            id
          }
          decimals
          symbol
          usdSpotPrice
          relayId
          id
        }
        ...PaymentAsset_data
        id
      }
      id
    }
    id
  }
  quantity
}

fragment AskBidModal_trade on TradeSummaryType {
  bestAsk {
    closedAt
    openedAt
    dutchAuctionFinalPrice
    isFulfillable
    orderType
    taker {
      ...wallet_accountKey
    }
    maker{
      ...wallet_accountKey
    }
    takerAssetBundle {
      assetQuantities(first: 1) {
        edges {
          node {
            quantity
            asset {
              decimals
              symbol
              usdSpotPrice
            }
          }
        }
      }
    }
  }
  bestBid {
    taker {
      ...wallet_accountKey
    }
    maker{
      ...wallet_accountKey
    }
    orderType
    makerAssetBundle {
      assetQuantities(first: 1) {
        edges {
          node {
            quantity
            maker {
              ...wallet_accountKey
            }
            asset {
              decimals
              symbol
              usdSpotPrice
              id
            }
            ...AssetQuantity_data
            id
          }
        }
      }
      id
    }
    id
  }
}

fragment AskPrice_data on OrderV2Type {
  dutchAuctionFinalPrice
  openedAt
  priceFnEndedAt
  makerAssetBundle {
    assetQuantities(first: 1) {
      edges {
        node {
          ...quantity_data
          id
        }
      }
    }
    id
  }
  takerAssetBundle {
    assetQuantities(first: 1) {
      edges {
        node {
          ...AssetQuantity_data
          id
        }
      }
    }
    id
  }
}

fragment AssetMedia_asset on AssetType {
  animationUrl
  backgroundColor
  collection {
    description
    displayData {
      cardDisplayStyle
    }
    imageUrl
    hidden
    name
    slug
    id
  }
  description
  name
  tokenId
  imageUrl
}

fragment AssetQuantity_data on AssetQuantityType {
  asset {
    ...Price_data
    id
  }
  quantity
}

fragment Boost_collection on CollectionType {
  numericTraits {
    key
    value {
      max
      min
    }
  }
  slug
}

fragment Boost_trait on TraitType {
  displayType
  floatValue
  intValue
  traitType
}

fragment ChainInfo_assetContract on AssetContractType {
  account {
    address
    chain {
      identifier
      id
    }
    id
  }
  blockExplorerLink
}

fragment CollectionVerificationStatus_collection on CollectionType {
  hidden
  slug
  ...verification_data
}

fragment Date_trait on TraitType {
  traitType
  floatValue
  intValue
}

fragment EnsManualEntryModal_asset on AssetType {
  assetContract {
    account {
      address
      id
    }
    id
  }
  tokenId
}

fragment NumericTrait_collection on CollectionType {
  numericTraits {
    key
    value {
      max
      min
    }
  }
  slug
}

fragment NumericTrait_trait on TraitType {
  displayType
  floatValue
  intValue
  maxValue
  traitType
}

fragment PaymentAsset_data on PaymentAssetType {
  asset {
    assetContract {
      account {
        address
        id
      }
      id
    }
    imageUrl
    symbol
    id
  }
}

fragment Price_data on AssetType {
  decimals
  imageUrl
  symbol
  usdSpotPrice
  assetContract {
    blockExplorerLink
    id
  }
}

fragment ProfileImage_data on AccountType {
  imageUrl
  address
  chain {
    identifier
    id
  }
}

fragment Property_collection on CollectionType {
  slug
  stats {
    totalSupply
    id
  }
}

fragment Property_trait on TraitType {
  displayType
  traitCount
  traitType
  value
}

fragment SocialInfoBar_data on CollectionType {
  discordUrl
  externalUrl
  isEditable
  mediumUsername
  slug
  telegramUrl
  twitterUsername
}

fragment Toolbar_asset on AssetType {
  assetContract {
    account {
      address
      chain {
        identifier
        id
      }
      id
    }
    id
  }
  collection {
    externalUrl
    name
    id
  }
  externalLink
  name
  relayId
  tokenId
}

fragment Toolbar_transfer_3z4lq0 on ArchetypeType {
  ...TransferModal_data_3z4lq0
}

fragment TradeStation_archetype_3z4lq0 on ArchetypeType {
  ...AskBidModal_archetype_3z4lq0
}

fragment TradeStation_data_ttWlh on Query {
  tradeStationSummary: tradeSummary(archetype: $archetype) {
    bestAsk {
      isFulfillable
      closedAt
      dutchAuctionFinalPrice
      openedAt
      orderType
      priceFnEndedAt
      englishAuctionReservePrice
      relayId
      maker {
        ...wallet_accountKey
        id
      }
      makerAssetBundle {
        assetQuantities(first: 1) {
          edges {
            node {
              quantity
              asset {
                decimals
                assetContract {
                  account {
                    chain {
                      identifier
                      id
                    }
                    id
                  }
                  id
                }
                collection {
                  slug
                  id
                }
                id
              }
              id
            }
          }
        }
        id
      }
      taker {
        ...wallet_accountKey
        id
      }
      takerAssetBundle {
        assetQuantities(first: 1) {
          edges {
            node {
              quantity
              asset {
                symbol
                decimals
                relayId
                id
              }
              ...AssetQuantity_data
              id
            }
          }
        }
        id
      }
      ...AskPrice_data
      ...orderLink_data
      id
    }
    bestBid {
      makerAssetBundle {
        assetQuantities(first: 1) {
          edges {
            node {
              quantity
              ...AssetQuantity_data
              id
            }
          }
        }
        id
      }
      id
    }
    ...AskBidModal_trade
  }
}

fragment TransferModal_data_3z4lq0 on ArchetypeType {
  asset {
    relayId
    decimals
    id
  }
  ownedQuantity(identity: {})
  quantity
}

fragment asset_url on AssetType {
  assetContract {
    account {
      address
      chain {
        identifier
        id
      }
      id
    }
    id
  }
  tokenId
}

fragment orderLink_data on OrderV2Type {
  makerAssetBundle {
    assetQuantities(first: 1) {
      edges {
        node {
          asset {
            externalLink
            collection {
              externalUrl
              id
            }
            id
          }
          id
        }
      }
    }
    id
  }
}

fragment quantity_data on AssetQuantityType {
  asset {
    decimals
    id
  }
  quantity
}

fragment verification_data on CollectionType {
  isMintable
  isSafelisted
  isVerified
}

fragment wallet_accountKey on AccountType {
  address
  chain {
    identifier
    id
  }
  user {
    username
  }
}

fragment trait_data on AssetType {
  traits(first:100) {
    edges {
      node{
        traitType
        value
        floatValue
        dateValue
        traitCount
        displayType
        maxValue
        id
        intValue
      }
    }
    pargeInfo {
      hasNextPage
      endCursor
    }
  }
}